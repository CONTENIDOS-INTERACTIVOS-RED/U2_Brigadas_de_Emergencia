{"remainingRequest":"/home/runner/work/U2_Brigadas_de_Emergencia/U2_Brigadas_de_Emergencia/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/U2_Brigadas_de_Emergencia/U2_Brigadas_de_Emergencia/src/views/curso/Tema4.vue?vue&type=template&id=27c8aa31&lang=pug&","dependencies":[{"path":"/home/runner/work/U2_Brigadas_de_Emergencia/U2_Brigadas_de_Emergencia/src/views/curso/Tema4.vue","mtime":1740290419695},{"path":"/home/runner/work/U2_Brigadas_de_Emergencia/U2_Brigadas_de_Emergencia/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U2_Brigadas_de_Emergencia/U2_Brigadas_de_Emergencia/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/runner/work/U2_Brigadas_de_Emergencia/U2_Brigadas_de_Emergencia/node_modules/pug-plain-loader/index.js","mtime":499162500000},{"path":"/home/runner/work/U2_Brigadas_de_Emergencia/U2_Brigadas_de_Emergencia/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U2_Brigadas_de_Emergencia/U2_Brigadas_de_Emergencia/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5jdXJzby1tYWluLWNvbnRhaW5lci5wYi0zCiAgQmFubmVySW50ZXJubyg6c3ViVGl0dWxvPSInNC4gUmVjdXJzb3MgYsOhc2ljb3MgcmVxdWVyaWRvcyBlbiB1bmEgYnJpZ2FkYSBkZSBlbWVyZ2VuY2lhcyciKQogIC5jb250YWluZXIudGFyamV0YS50YXJqZXRhLS1ibGFuY2EucC00LnAtbWQtNS5vdmVyZmxvdy1oaWRkZW4KCiAgICAucm93Lm1iLTQKICAgICAgLmNvbC1sZy04CiAgICAgICAgLmJnLWNvbG9yLTcucC00KGRhdGEtYW9zPSJmYWRlLWxlZnQiKS5tYi00CiAgICAgICAgICAucm93LmFsaWduLWl0ZW1zLXN0YXJ0CiAgICAgICAgICAgIC5jb2wtbGctYXV0bwogICAgICAgICAgICAgIGltZyhzcmM9IkAvYXNzZXRzL2N1cnNvL3RlbWE0LzEuc3ZnIiwgc3R5bGU9Im1heC13aWR0aDogOTBweCIpLm14LWF1dG8KICAgICAgICAgICAgLmNvbC1sZwogICAgICAgICAgICAgIHAubWItMCAgUmVjb3JkZW1vcyBxdWUgbGFzIGJyaWdhZGFzIGRlIGVtZXJnZW5jaWEgc29uIGdydXBvcyBvcmdhbml6YWRvcyBkZSBwZXJzb25hcyBxdWUgc2UgcHJlcGFyYW4gcGFyYSByZXNwb25kZXIsIGRlIG1hbmVyYSBlZmVjdGl2YSwgYSBzaXR1YWNpb25lcyBkZSBjcmlzaXMsIGNvbW8gaW5jZW5kaW9zLCBkZXNhc3RyZXMgbmF0dXJhbGVzLCBhY2NpZGVudGVzIGluZHVzdHJpYWxlcywgZW50cmUgb3Ryb3MuIFBhcmEgcXVlIGVzdGFzIGJyaWdhZGFzIG9wZXJlbiBkZSBmb3JtYSBlZmljaWVudGUgeSBzZWd1cmEsIGVzIGZ1bmRhbWVudGFsIGNvbnRhciBjb24gdW5hIHNlcmllIGRlIHJlY3Vyc29zIGLDoXNpY29zIHF1ZSBsZXMgcGVybWl0YW4gbGxldmFyIGEgY2FibyBzdXMgZnVuY2lvbmVzIGRlIG1hbmVyYSBhZGVjdWFkYS4gCgogICAgICAgIHAoZGF0YS1hb3M9ImZhZGUtbGVmdCIpLm1iLTQgQSBjb250aW51YWNpw7NuLCBzZSBkZXNjcmliZW4gbG9zIHJlY3Vyc29zIGVzZW5jaWFsZXMgcXVlIGRlYmVuIGVzdGFyIGRpc3BvbmlibGVzIHBhcmEgdW5hIGJyaWdhZGEgZGUgZW1lcmdlbmNpYXMuCgogICAgICAuY29sLWxnLTQKICAgICAgICBmaWd1cmUKICAgICAgICAgIGltZyhzcmM9IkAvYXNzZXRzL2N1cnNvL3RlbWE0LzIucG5nIiwgZGF0YS1hb3M9Inpvb20taW4iKQoKCiAgICAjdF80XzEudGl0dWxvLXNlZ3VuZG8oZGF0YS1hb3M9ImZsaXAtdXAiKQogICAgICBoMiAjW3NwYW4gNC4xXSBQZXJzb25hbCBjYXBhY2l0YWRvCgogICAgcChkYXRhLWFvcz0iZmFkZS1sZWZ0IikubWItNCBFbCByZWN1cnNvIG3DoXMgdmFsaW9zbyBlbiB1bmEgYnJpZ2FkYSBkZSBlbWVyZ2VuY2lhcyBlcywgc2luIGR1ZGEsIGVsIGNhcGl0YWwgaHVtYW5vLiBMYSBlZmljYWNpYSB5IGVsIMOpeGl0byBkZSBsYSByZXNwdWVzdGEgYW50ZSB1bmEgZW1lcmdlbmNpYSBkZXBlbmRlbiBlbiBncmFuIG1lZGlkYSBkZSBsYSBwcmVwYXJhY2nDs24geSBoYWJpbGlkYWRlcyBkZWwgcGVyc29uYWwgaW52b2x1Y3JhZG8uIFBvciBlbGxvLCBlcyBjcnVjaWFsIGNvbnRhciBjb24gcGVyc29uYWwgZGViaWRhbWVudGUgY2FwYWNpdGFkbyBlbiBkaXZlcnNhcyDDoXJlYXMgcXVlIGFiYXJjYW4gdGFudG8gbGEgYXRlbmNpw7NuIGlubWVkaWF0YSBjb21vIGxhIGdlc3Rpw7NuIGRlIHNpdHVhY2lvbmVzIGNyw610aWNhcy4KCgogICAgVGFic0MuY29sb3ItYWNlbnRvLWNvbnRlbmlkby5tYi01CiAgICAgIC50YWJzLWNvbnRlbnQuYm9yZGVyLnB4LTQucC1tZC01LnB5LTModGl0dWxvPSJQcmltZXJvcyBhdXhpbGlvcyIgOmljb249InJlcXVpcmUoJ0AvYXNzZXRzL2J1bGxldHMvaWNvbi10YWItYy0xLTIuc3ZnJykiICkKICAgICAgICAucm93CiAgICAgICAgICAuY29sLW1kLTYuY29sLWxnLTcuY29sLXhsLTgubWItNC5tYi1tZC0wLm9yZGVyLTIKICAgICAgICAgICAgaDQgUHJpbWVyb3MgYXV4aWxpb3MKICAgICAgICAgICAgcCBMYSBmb3JtYWNpw7NuIGVuIGF0ZW5jacOzbiBiw6FzaWNhIHkgYXZhbnphZGEgZGUgcHJpbWVyb3MgYXV4aWxpb3MgZXMgZnVuZGFtZW50YWwuIFRvZG9zIGxvcyBtaWVtYnJvcyBkZSBsYSBicmlnYWRhIGRlYmVuIHNlciBjb21wZXRlbnRlcyBlbiB0w6ljbmljYXMgZXNlbmNpYWxlcywgY29tbyBsYSBSQ1AgKHJlYW5pbWFjacOzbiBjYXJkaW9wdWxtb25hciksIHF1ZSBwdWVkZSBzZXIgZGV0ZXJtaW5hbnRlIGVuIGxhIHN1cGVydml2ZW5jaWEgZGUgdW5hIHBlcnNvbmEgZW4gZXN0YWRvIGNyw610aWNvLiBBZGVtw6FzLCBlbCBjb25vY2ltaWVudG8gc29icmUgZWwgbWFuZWpvIGRlIGhlcmlkYXMsIGZyYWN0dXJhcyB5IG90cmFzIGxlc2lvbmVzIGNvbXVuZXMgZXMgdml0YWwuIExhIGNhcGFjaXRhY2nDs24gZGViZSBpbmNsdWlyIHByw6FjdGljYXMgcmVndWxhcmVzIHkgc2ltdWxhY3JvcyBwYXJhIGFzZWd1cmFyIHF1ZSBjYWRhIG1pZW1icm8gc2Ugc2llbnRhIHNlZ3VybyB5IGNhcGF6IGRlIGFjdHVhciBjb24gcmFwaWRleiB5IGVmaWNhY2lhIGFudGUgdW5hIGVtZXJnZW5jaWEgcmVhbC4KICAgICAgICAKICAgICAgICAgIC5jb2wtbWQtNi5jb2wtbGctNS5jb2wteGwtNC5vcmRlci0xCiAgICAgICAgICAgIGZpZ3VyZShkYXRhLWFvcz0iem9vbS1pbiIpCiAgICAgICAgICAgICAgaW1nKHNyYz0nQC9hc3NldHMvY3Vyc28vdGVtYTQvdGFiLTEucG5nJywgYWx0PScnKQogICAgICAudGFicy1jb250ZW50LmJvcmRlci5weC00LnAtbWQtNS5weS0zKHRpdHVsbz0iTGlkZXJhemdvIHkgZ2VzdGnDs24gZGUgY3Jpc2lzIiA6aWNvbj0icmVxdWlyZSgnQC9hc3NldHMvYnVsbGV0cy9pY29uLXRhYi1jLTItMi5zdmcnKSIgKQogICAgICAgIC5yb3cKICAgICAgICAgIC5jb2wtbWQtNi5jb2wtbGctNy5jb2wteGwtOC5tYi00Lm1iLW1kLTAub3JkZXItMgogICAgICAgICAgICBoNCBMaWRlcmF6Z28geSBnZXN0acOzbiBkZSBjcmlzaXMKICAgICAgICAgICAgcCBMYSBkaW7DoW1pY2EgZGUgdW4gZXF1aXBvIGRlIGVtZXJnZW5jaWEgcmVxdWllcmUgZGUgbMOtZGVyZXMgcXVlIHBvc2VhbiBoYWJpbGlkYWRlcyBleGNlcGNpb25hbGVzIGVuIGxhIGNvb3JkaW5hY2nDs24gZGUgYWNjaW9uZXMuIEVzdG9zIGzDrWRlcmVzIG5vIHNvbG8gZGViZW4gc2VyIGNhcGFjZXMgZGUgdG9tYXIgZGVjaXNpb25lcyByw6FwaWRhcyB5IGVmZWN0aXZhcyBiYWpvIHByZXNpw7NuLCBzaW5vIHF1ZSB0YW1iacOpbiBkZWJlbiBzYWJlciBjb211bmljYXIgY2xhcmFtZW50ZSBsYXMgaW5zdHJ1Y2Npb25lcyBhbCBlcXVpcG8uIExhIGdlc3Rpw7NuIGRlIHJlY3Vyc29zIGVzIGlndWFsbWVudGUgY3J1Y2lhbDsgbG9zIGzDrWRlcmVzIGRlYmVuIHNlciBjYXBhY2VzIGRlIGV2YWx1YXIgbGEgc2l0dWFjacOzbiwgcHJpb3JpemFyIHRhcmVhcyB5IGFzaWduYXIgcm9sZXMgZXNwZWPDrWZpY29zIGEgY2FkYSBtaWVtYnJvIGRlbCBlcXVpcG8sIGdhcmFudGl6YW5kbyBhc8OtIHVuYSByZXNwdWVzdGEgb3JnYW5pemFkYSB5IGVmaWNpZW50ZS4gTGEgZm9ybWFjacOzbiBlbiBsaWRlcmF6Z28sIGRlYmUgaW5jbHVpciBlbCBkZXNhcnJvbGxvIGRlIGhhYmlsaWRhZGVzIGludGVycGVyc29uYWxlcywgZGFkbyBxdWUgbGEgY29oZXNpw7NuIGRlbCBlcXVpcG8gZXMgdW4gZmFjdG9yIGRldGVybWluYW50ZSBlbiBlbCDDqXhpdG8gZGUgbGEgb3BlcmFjacOzbi4KICAgICAgICAKICAgICAgICAgIC5jb2wtbWQtNi5jb2wtbGctNS5jb2wteGwtNC5vcmRlci0xCiAgICAgICAgICAgIGZpZ3VyZShkYXRhLWFvcz0iem9vbS1pbiIpCiAgICAgICAgICAgICAgaW1nKHNyYz0nQC9hc3NldHMvY3Vyc28vdGVtYTQvdGFiLTIucG5nJywgYWx0PScnKQoKICAgICAgLnRhYnMtY29udGVudC5ib3JkZXIucHgtNC5wLW1kLTUucHktMyh0aXR1bG89IkZvcm1hY2nDs24gdMOpY25pY2EiIDppY29uPSJyZXF1aXJlKCdAL2Fzc2V0cy9idWxsZXRzL2ljb24tdGFiLWMtMy0yLnN2ZycpIiApCiAgICAgICAgLnJvdwogICAgICAgICAgLmNvbC1tZC02LmNvbC1sZy03LmNvbC14bC04Lm1iLTQubWItbWQtMC5vcmRlci0yCiAgICAgICAgICAgIGg0IEZvcm1hY2nDs24gdMOpY25pY2EKICAgICAgICAgICAgcCBMYSBjYXBhY2l0YWNpw7NuIHTDqWNuaWNhIGVzIGVzZW5jaWFsIHkgZGViZSBzZXIgYWRhcHRhZGEgYWwgdGlwbyBkZSBlbWVyZ2VuY2lhcyBxdWUgc2UgcHVlZGVuIHByZXNlbnRhci4gUG9yIGVqZW1wbG8sIGVuIGVsIGNhc28gZGUgaW5jZW5kaW9zLCBlbCBwZXJzb25hbCBkZWJlIHJlY2liaXIgZm9ybWFjacOzbiBlbiBlbCBtYW5lam8gZGUgZnVlZ28sIGluY2x1eWVuZG8gZWwgdXNvIGRlIGV4dGludG9yZXMgeSB0w6ljbmljYXMgZGUgZXZhY3VhY2nDs24uIFBhcmEgc2l0dWFjaW9uZXMgcXVlIGludm9sdWNyZW4gcmVzY2F0ZXMgZW4gYWx0dXJhcywgZXMgaW1wcmVzY2luZGlibGUgcXVlIGxvcyBtaWVtYnJvcyBkZSBsYSBicmlnYWRhIGVzdMOpbiBlbnRyZW5hZG9zIGVuIHTDqWNuaWNhcyBkZSBlc2NhbGFkYSB5IGVuIGVsIHVzbyBkZSBlcXVpcG9zIGRlIHNlZ3VyaWRhZCBlc3BlY8OtZmljb3MuIEFzaW1pc21vLCBlbiBlbCBjYXNvIGRlIGRlcnJhbWVzIHF1w61taWNvcywgZWwgcGVyc29uYWwgZGViZSBlc3RhciBmYW1pbGlhcml6YWRvIGNvbiBsb3MgcHJvdG9jb2xvcyBkZSByZXNwdWVzdGEsIGluY2x1eWVuZG8gbGEgaWRlbnRpZmljYWNpw7NuIGRlIHN1c3RhbmNpYXMgcGVsaWdyb3NhcyB5IGVsIHVzbyBkZSBsYXMgbWlzbWFzLgogICAgICAgICAgLmNvbC1tZC02LmNvbC1sZy01LmNvbC14bC00Lm9yZGVyLTEKICAgICAgICAgICAgZmlndXJlKGRhdGEtYW9zPSJ6b29tLWluIikKICAgICAgICAgICAgICBpbWcoc3JjPSdAL2Fzc2V0cy9jdXJzby90ZW1hNC90YWItMy5wbmcnLCBhbHQ9JycsIHN0eWxlPSJ3aWR0aDogMTAwJTsiKQoKCiAgICAjdF80XzIudGl0dWxvLXNlZ3VuZG8oZGF0YS1hb3M9ImZsaXAtdXAiKQogICAgICBoMiAjW3NwYW4gNC4yXSBFcXVpcGFtaWVudG8gbyBlbGVtZW50b3MgZGUgcHJvdGVjY2nDs24gcGVyc29uYWwgKEVQUCkKCiAgICBwKGRhdGEtYW9zPSJmYWRlLWxlZnQiKS5tYi00IExhIHNlZ3VyaWRhZCBkZWwgcGVyc29uYWwgZXMgcHJpbW9yZGlhbCBlbiBjdWFscXVpZXIgb3BlcmFjacOzbiwgZXNwZWNpYWxtZW50ZSBlbiBjb250ZXh0b3MgZGUgcmllc2dvIGNvbW8gYXF1ZWxsb3MgcXVlIGludm9sdWNyYW4gYnJpZ2FkYXMgZGUgZW1lcmdlbmNpYSBvIHRyYWJham9zIGVuIGVudG9ybm9zIHBlbGlncm9zb3MuIFBvciBlbGxvLCBjYWRhIG1pZW1icm8gZGUgbGEgYnJpZ2FkYSBkZWJlIGNvbnRhciBjb24gZWwgZXF1aXBvIGRlIHByb3RlY2Npw7NuIHBlcnNvbmFsIChFUFApIGFkZWN1YWRvLCBxdWUgbm8gc29sbyBjdW1wbGUgdW5hIGZ1bmNpw7NuIGRlIHJlc2d1YXJkbyBmw61zaWNvLCBzaW5vIHF1ZSB0YW1iacOpbiBlcyBmdW5kYW1lbnRhbCBwYXJhIGdhcmFudGl6YXIgbGEgZWZpY2FjaWEgZW4gbGEgZWplY3VjacOzbiBkZSBzdXMgbGFib3Jlcy4gQSBjb250aW51YWNpw7NuLCBzZSBwcm9mdW5kaXphIGVuIGxvcyBkaXZlcnNvcyBlbGVtZW50b3MgcXVlIGNvbXBvbmVuIGVzdGUgZXF1aXBvIHkgc3UgaW1wb3J0YW5jaWEuCgogICAgLmJnLWZ1bGwtd2lkdGguYmctY29sb3ItaW5mbwogICAgICAucC00LnAtbWQtNQogICAgICAgIC5yb3cuanVzdGlmeS1jb250ZW50LWNlbnRlci5hbGlnbi1pdGVtcy1jZW50ZXIubWItNQogICAgICAgICAgLmNvbC1sZy0xMAogICAgICAgICAgICBJbWFnZW5JbmZvZ3JhZmljYS5jb2xvci1zZWN1bmRhcmlvCiAgICAgICAgICAgICAgICB0ZW1wbGF0ZSh2LXNsb3Q6aW1hZ2VuKQogICAgICAgICAgICAgICAgICBmaWd1cmUKICAgICAgICAgICAgICAgICAgICBpbWcoc3JjPSJAL2Fzc2V0cy9jdXJzby90ZW1hNC9pbmZvMS5wbmciLCBhbHQ9IiIsIHN0eWxlPSJtYXgtd2lkdGg6IDExODJweDsiKS5teC1hdXRvCgogICAgICAgICAgICAgICAgLmJnLWNvbG9yLXdoaXRlLmJveC1zaGFkb3cucC0zKHg9IjclIiB5PSI5My41JSIgbnVtZXJvPSIrIikKICAgICAgICAgICAgICAgICAgaDUgQ2FzY28KICAgICAgICAgICAgICAgICAgcCBFc3RlIGVsZW1lbnRvIGVzIHZpdGFsIHBhcmEgbGEgcHJvdGVjY2nDs24gZGUgbGEgY2FiZXphLCBwdWVzdG8gcXVlIHB1ZWRlIHByZXZlbmlyIGxlc2lvbmVzIHNldmVyYXMgY2F1c2FkYXMgcG9yIGdvbHBlcyBvIGNhw61kYXMgZGUgb2JqZXRvcywgcXVlIHNvbiBjb211bmVzIGVuIHNpdHVhY2lvbmVzIGRlIGVtZXJnZW5jaWEuIEFkZW3DoXMsIG11Y2hvcyBjYXNjb3MgbW9kZXJub3MgZXN0w6FuIGRpc2XDsWFkb3MgY29uIGNhcmFjdGVyw61zdGljYXMgYWRpY2lvbmFsZXMsIGNvbW8gdmlzZXJhcyBvIHNpc3RlbWFzIGRlIHZlbnRpbGFjacOzbiwgcXVlIGF1bWVudGFuIGxhIGNvbW9kaWRhZCB5IGxhIGZ1bmNpb25hbGlkYWQgZW4gZWwgY2FtcG8uCgogICAgICAgICAgICAgICAgLmJnLWNvbG9yLXdoaXRlLmJveC1zaGFkb3cucC0zKHg9IjI4LjUlIiB5PSI1LjUlIiBudW1lcm89IisiKQogICAgICAgICAgICAgICAgICBoNSBHdWFudGVzCiAgICAgICAgICAgICAgICAgIHAgTGEgZWxlY2Npw7NuIGRlIGd1YW50ZXMgYWRlY3VhZG9zIGVzIGNydWNpYWwsIHB1ZXMgbGFzIG1hbm9zIHNvbiB1bmFzIGRlIGxhcyBwYXJ0ZXMgbcOhcyBleHB1ZXN0YXMgeSB2dWxuZXJhYmxlcyBkZWwgY3VlcnBvLiBMb3MgZ3VhbnRlcyBubyBzb2xvIHByb3RlZ2VuIGNvbnRyYSBjb3J0ZXMgeSBhYnJhc2lvbmVzLCBzaW5vIHF1ZSB0YW1iacOpbiBldml0YW4gcXVlbWFkdXJhcyB5IGVsIGNvbnRhY3RvIGNvbiBzdXN0YW5jaWFzIHF1w61taWNhcyBwZWxpZ3Jvc2FzLiBFcyBmdW5kYW1lbnRhbCBzZWxlY2Npb25hciBndWFudGVzIGVzcGVjw61maWNvcyBwYXJhIGNhZGEgdGlwbyBkZSB0YXJlYSwgY29uc2lkZXJhbmRvIGZhY3RvcmVzIGNvbW8gbGEgcmVzaXN0ZW5jaWEgYSBwcm9kdWN0b3MgcXXDrW1pY29zLCBsYSBhYnJhc2l2aWRhZCB5IGxhIHRlbXBlcmF0dXJhLgoKICAgICAgICAgICAgICAgIC5iZy1jb2xvci13aGl0ZS5ib3gtc2hhZG93LnAtMyh4PSI0NSUiIHk9IjkzLjUlIiBudW1lcm89IisiKQogICAgICAgICAgICAgICAgICBoNSBCb3RhcyBkZSBzZWd1cmlkYWQKICAgICAgICAgICAgICAgICAgcCBMYXMgYm90YXMgc29uIHVuIGNvbXBvbmVudGUgZXNlbmNpYWwgcXVlIHByb3BvcmNpb25hIHNvcG9ydGUgeSBwcm90ZWNjacOzbiBhIGxvcyBwaWVzLiBEZWJlbiBzZXIgcmVzaXN0ZW50ZXMgYSBvYmpldG9zIHB1bnphbnRlcyBvIHBlc2Fkb3MsIGFkZW3DoXMgZGUgb2ZyZWNlciBjYXJhY3RlcsOtc3RpY2FzIGNvbW8gc3VlbGFzIGFudGlkZXNsaXphbnRlcyB5IHByb3BpZWRhZGVzIGltcGVybWVhYmxlcy4gTGEgY29tb2RpZGFkIHkgZWwgYWp1c3RlIGFkZWN1YWRvIHNvbiBpZ3VhbG1lbnRlIGltcG9ydGFudGVzLCBwb3JxdWUgZWwgcGVyc29uYWwgcHVlZGUgZXN0YXIgZW4gcGllIGR1cmFudGUgbGFyZ29zIHBlcsOtb2RvcyBvIG1vdmVyc2UgZW4gdGVycmVub3MgaXJyZWd1bGFyZXMuCgogICAgICAgICAgICAgICAgLmJnLWNvbG9yLXdoaXRlLmJveC1zaGFkb3cucC0zKHg9IjYyLjUlIiB5PSI3LjUlIiBudW1lcm89IisiKQogICAgICAgICAgICAgICAgICBoNSBSb3BhIGlnbsOtZnVnYQogICAgICAgICAgICAgICAgICBwIFBhcmEgbGFzIGJyaWdhZGFzIHF1ZSBpbnRlcnZpZW5lbiBlbiBpbmNlbmRpb3MsIGxhIHJvcGEgaWduw61mdWdhIGVzIGluZGlzcGVuc2FibGUuIEVzdGUgdGlwbyBkZSB2ZXN0aW1lbnRhIGVzdMOhIGRpc2XDsWFkYSBwYXJhIHJlc2lzdGlyIGFsdGFzIHRlbXBlcmF0dXJhcyB5IG1pbmltaXphciBlbCByaWVzZ28gZGUgcXVlbWFkdXJhcy4gQWRlbcOhcywgZGViZSBzZXIgbGlnZXJhIHkgcGVybWl0aXIgbGliZXJ0YWQgZGUgbW92aW1pZW50bywgZGViaWRvIGEgcXVlLCBlbiBzaXR1YWNpb25lcyBkZSBlbWVyZ2VuY2lhLCBsYSBhZ2lsaWRhZCBwdWVkZSBzZXIgdW4gZmFjdG9yIGRldGVybWluYW50ZSBwYXJhIGxhIHNlZ3VyaWRhZCB5IGVsIMOpeGl0byBkZSBsYSBpbnRlcnZlbmNpw7NuLgoKICAgICAgICAgICAgICAgIC5iZy1jb2xvci13aGl0ZS5ib3gtc2hhZG93LnAtMyh4PSI3OS41JSIgeT0iOTMuNSUiIG51bWVybz0iKyIpCiAgICAgICAgICAgICAgICAgIGg1IE1hc2NhcmlsbGFzIHkgcmVzcGlyYWRvcmVzCiAgICAgICAgICAgICAgICAgIHAgRW4gZW50b3Jub3MgZG9uZGUgaGF5IHJpZXNnbyBkZSBpbmhhbGFyIGh1bW8sIGdhc2VzIHTDs3hpY29zIG8gcGFydMOtY3VsYXMgZW4gZWwgYWlyZSwgZWwgdXNvIGRlIG1hc2NhcmlsbGFzIHkgcmVzcGlyYWRvcmVzIHNlIGNvbnZpZXJ0ZSBlbiB1bmEgbmVjZXNpZGFkLiBFc3RvcyBkaXNwb3NpdGl2b3Mgbm8gc29sbyBwcm90ZWdlbiBsYSBzYWx1ZCByZXNwaXJhdG9yaWEgZGVsIHBlcnNvbmFsLCBzaW5vIHF1ZSB0YW1iacOpbiBzb24gZXNlbmNpYWxlcyBwYXJhIG1hbnRlbmVyIGxhIGNvbmNlbnRyYWNpw7NuIHkgbGEgZWZpY2FjaWEgZW4gc2l0dWFjaW9uZXMgY3LDrXRpY2FzLiBFcyBpbXBvcnRhbnRlIHF1ZSBlbCBlcXVpcG8gZGUgcmVzcGlyYWNpw7NuIHNlIGFqdXN0ZSBjb3JyZWN0YW1lbnRlIHkgc2VhIGFkZWN1YWRvIHBhcmEgZWwgdGlwbyBlc3BlY8OtZmljbyBkZSBjb250YW1pbmFudGVzIHByZXNlbnRlcyBlbiBlbCBhbWJpZW50ZS4KCgogICAgLmJnLWZ1bGwtd2lkdGguYmctY29sb3ItMi5tYi01CiAgICAgIC5weC00LnB4LW1kLTUucHktNAogICAgICAgIC5yb3cuYWxpZ24taXRlbXMtY2VudGVyCiAgICAgICAgICAuY29sLWxnLWF1dG8KICAgICAgICAgICAgaW1nKHNyYz0iQC9hc3NldHMvY3Vyc28vdGVtYTQvMy5zdmciLCBzdHlsZT0ibWF4LXdpZHRoOiA5MHB4IikubXgtYXV0bwogICAgICAgICAgLmNvbC1sZwogICAgICAgICAgICBwLm1iLTAgRWwgRXF1aXBhbWllbnRvIGRlIFByb3RlY2Npw7NuIFBlcnNvbmFsIChFUFApLCBubyBlcyBzaW1wbGVtZW50ZSB1biBjb25qdW50byBkZSBoZXJyYW1pZW50YXM7IGVzIHVuYSBpbnZlcnNpw7NuIGVuIGxhIHNlZ3VyaWRhZCB5IGVsIGJpZW5lc3RhciBkZSBsb3MgbWllbWJyb3MgZGUgbGEgYnJpZ2FkYS4gTGEgY29ycmVjdGEgc2VsZWNjacOzbiwgdXNvIHkgbWFudGVuaW1pZW50byBkZWwgRVBQIHNvbiByZXNwb25zYWJpbGlkYWRlcyBxdWUgZGViZW4gc2VyIGFzdW1pZGFzIGNvbiBzZXJpZWRhZCwgZGFkbyBxdWUgcHVlZGVuIG1hcmNhciBsYSBkaWZlcmVuY2lhIGVudHJlIGxhIHZpZGEgeSBsYSBtdWVydGUgZW4gc2l0dWFjaW9uZXMgZGUgcmllc2dvLiBBZGVtw6FzLCBsYSBjYXBhY2l0YWNpw7NuIHNvYnJlIGVsIHVzbyBhZGVjdWFkbyBkZWwgRVBQLCBlcyBlc2VuY2lhbCBwYXJhIG1heGltaXphciBzdSBlZmVjdGl2aWRhZCB5IGdhcmFudGl6YXIgcXVlIGVsIHBlcnNvbmFsIGVzdMOpIHByZXBhcmFkbyBwYXJhIGVuZnJlbnRhciBjdWFscXVpZXIgZGVzYWbDrW8gcXVlIHNlIHByZXNlbnRlIGVuIHN1IGxhYm9yLgoKICAgICN0XzRfMy50aXR1bG8tc2VndW5kbyhkYXRhLWFvcz0iZmxpcC11cCIpCiAgICAgIGgyICNbc3BhbiA0LjNdIEhlcnJhbWllbnRhcyB5IGVxdWlwb3MgZGUgcmVzY2F0ZQoKICAgIHAoZGF0YS1hb3M9ImZhZGUtbGVmdCIpLm1iLTQgTG9zIGVxdWlwb3MgeSBoZXJyYW1pZW50YXMgZGUgcmVzY2F0ZSwgc29uIG11eSBpbXBvcnRhbnRlcyBkZW50cm8gZGUgbGFzIGVtcHJlc2FzLCBwdWVzdG8gcXVlIGVzdGFzIHBlcm1pdGVuIGNvbnRyYXJyZXN0YXIgY3VhbHF1aWVyIHNpdHVhY2nDs24gZGUgZW1lcmdlbmNpYSBxdWUgc2UgcHJlc2VudGUsIGRlbnRybyBkZSBlc3RhcyBoZXJyYW1pZW50YXMgeSBlcXVpcG9zIHNlIHB1ZWRlbiBkZXN0YWNhcjoKICAgIAoKICAgIC5iZy1mdWxsLXdpZHRoLmJnLWZvbmRvLXNsaWRlci5tYi01CiAgICAgIC5wLTQucC1tZC01CiAgICAgICAgU2x5ZGVyQSh0aXBvPSJiIikuYmctd2hpdGUoZGF0YS1hb3M9Inpvb20taW4iKQogICAgICAgICAgLnJvdy5hbGlnbi1pdGVtcy1jZW50ZXIucC00LnAtbWQtNQogICAgICAgICAgICAuY29sLWxnLTUKICAgICAgICAgICAgICBmaWd1cmUKICAgICAgICAgICAgICAgIGltZyhzcmM9IkAvYXNzZXRzL2N1cnNvL3RlbWE0L3NsaWRlci0xLnBuZyIpCiAgICAgICAgICAgIC5jb2wtbGctNwogICAgICAgICAgICAgIGg1IE1hbmd1ZXJhcyB5IGV4dGludG9yZXMKICAgICAgICAgICAgICBwIFNvbiBoZXJyYW1pZW50YXMgaW5kaXNwZW5zYWJsZXMgZW4gbGEgbHVjaGEgY29udHJhIGluY2VuZGlvcy4gTGFzIG1hbmd1ZXJhcyBkZWJlbiBzZXIgZGUgYWx0YSBwcmVzacOzbiB5IGxvbmdpdHVkIHN1ZmljaWVudGUsIHBhcmEgbGxlZ2FyIGEgbG9zIHB1bnRvcyBjcsOtdGljb3MsIG1pZW50cmFzIHF1ZSBsb3MgZXh0aW50b3JlcyBkZWJlbiBlc3RhciBjbGFzaWZpY2Fkb3MsIHNlZ8O6biBlbCB0aXBvIGRlIGZ1ZWdvIHF1ZSBzZSBwdWVkZSBwcmVzZW50YXIsIHlhIHNlYW4gaW5jZW5kaW9zIGRlIG1hdGVyaWFsZXMgc8OzbGlkb3MsIGzDrXF1aWRvcyBvIGVsw6ljdHJpY29zLiBMYSBjYXBhY2l0YWNpw7NuIHNvYnJlIHN1IHVzbyBhZGVjdWFkbyBlcyBpZ3VhbG1lbnRlIGltcG9ydGFudGUgcGFyYSBtYXhpbWl6YXIgc3UgZWZlY3RpdmlkYWQgZW4gc2l0dWFjaW9uZXMgZGUgZW1lcmdlbmNpYS4KCiAgICAgICAgICAucm93LmFsaWduLWl0ZW1zLWNlbnRlci5wLTQucC1tZC01CiAgICAgICAgICAgIC5jb2wtbGctNQogICAgICAgICAgICAgIGZpZ3VyZQogICAgICAgICAgICAgICAgaW1nKHNyYz0iQC9hc3NldHMvY3Vyc28vdGVtYTQvc2xpZGVyLTIucG5nIikKICAgICAgICAgICAgLmNvbC1sZy03CiAgICAgICAgICAgICAgaDUgQ3VlcmRhcyB5IGFybmVzZXMKICAgICAgICAgICAgICBwIFNvbiBlc2VuY2lhbGVzIG5vIHNvbG8gcGFyYSByZXNjYXRlcyBlbiBhbHR1cmFzLCBjb21vIGVuIGVsIGNhc28gZGUgZWRpZmljaW9zIGNvbGFwc2Fkb3MgbyBlbiBvcGVyYWNpb25lcyBlbiBhY2FudGlsYWRvcywgc2lubyB0YW1iacOpbiBwYXJhIGFzZWd1cmFyIGEgbG9zIHJlc2NhdGlzdGFzIGVuIHNpdHVhY2lvbmVzIHBlbGlncm9zYXMuIExhIGVsZWNjacOzbiBkZSBjdWVyZGFzIGRlIGFsdGEgcmVzaXN0ZW5jaWEgeSBsYSBjb3JyZWN0YSBjb2xvY2FjacOzbiBkZSBhcm5lc2VzIHNvbiB2aXRhbGVzIHBhcmEgcHJldmVuaXIgY2HDrWRhcyB5IGFjY2lkZW50ZXMsIGxvIHF1ZSBwdWVkZSBtYXJjYXIgbGEgZGlmZXJlbmNpYSBlbnRyZSBsYSB2aWRhIHkgbGEgbXVlcnRlIGR1cmFudGUgdW5hIG9wZXJhY2nDs24gZGUgcmVzY2F0ZS4KCiAgICAgICAgICAucm93LmFsaWduLWl0ZW1zLWNlbnRlci5wLTQucC1tZC01CiAgICAgICAgICAgIC5jb2wtbGctNQogICAgICAgICAgICAgIGZpZ3VyZQogICAgICAgICAgICAgICAgaW1nKHNyYz0iQC9hc3NldHMvY3Vyc28vdGVtYTQvc2xpZGVyLTMucG5nIikKICAgICAgICAgICAgLmNvbC1sZy03CiAgICAgICAgICAgICAgaDUgUGFsYXMgeSBwaWNvcwogICAgICAgICAgICAgIHAgU29uIGhlcnJhbWllbnRhcyBtYW51YWxlcyBxdWUsIGF1bnF1ZSBzaW1wbGVzLCBzb24gY3J1Y2lhbGVzIGVuIHNpdHVhY2lvbmVzIGRlIGRlcnJ1bWJlcyBvIGRlc2xpemFtaWVudG9zIGRlIHRpZXJyYS4gUGVybWl0ZW4gYSBsb3MgcmVzY2F0aXN0YXMgcmVtb3ZlciBlc2NvbWJyb3MgeSBhY2NlZGVyIGEgbGFzIHbDrWN0aW1hcyBhdHJhcGFkYXMuIExhIGVyZ29ub23DrWEgeSBsYSBjYWxpZGFkIGRlIGVzdGFzIGhlcnJhbWllbnRhcyBubyBkZWJlbiBzdWJlc3RpbWFyc2UsIHBvcnF1ZSwgZW4gc2l0dWFjaW9uZXMgZGUgYWx0YSBwcmVzacOzbiwgbGEgZWZpY2llbmNpYSBlbiBlbCB1c28gZGUgZXN0YXMgaGVycmFtaWVudGFzIHB1ZWRlIGFjZWxlcmFyIGVsIHJlc2NhdGUuCgogICAgICAgICAgLnJvdy5hbGlnbi1pdGVtcy1jZW50ZXIucC00LnAtbWQtNQogICAgICAgICAgICAuY29sLWxnLTUKICAgICAgICAgICAgICBmaWd1cmUKICAgICAgICAgICAgICAgIGltZyhzcmM9IkAvYXNzZXRzL2N1cnNvL3RlbWE0L3NsaWRlci00LnBuZyIpCiAgICAgICAgICAgIC5jb2wtbGctNwogICAgICAgICAgICAgIGg1IENhbWlsbGFzIHkgc2lsbGFzCiAgICAgICAgICAgICAgcCBTaWxsYXMgZGUgcnVlZGFzIHkgY2FtaWxsYXMsIHNvbiBlbGVtZW50b3MgZnVuZGFtZW50YWxlcyBwYXJhIGVsIHRyYW5zcG9ydGUgc2VndXJvIGRlIGxvcyBoZXJpZG9zLiBMYXMgY2FtaWxsYXMgZGViZW4gc2VyIGxpdmlhbmFzLCBwZXJvIHJvYnVzdGFzLCB5IGNvbnRhciBjb24gY2FyYWN0ZXLDrXN0aWNhcyBxdWUgZmFjaWxpdGVuIGxhIGlubW92aWxpemFjacOzbiBkZSBsYSB2w61jdGltYS4gQWRlbcOhcywgbGFzIHNpbGxhcyBkZSBydWVkYXMgYWRhcHRhcnNlIHBhcmEgdGVycmVub3MgZGlmw61jaWxlcywgcGVybWl0aWVuZG8gcXVlIGxvcyByZXNjYXRpc3RhcyB0cmFzbGFkYW4gYSBsYXMgcGVyc29uYXMgaGVyaWRhcyBkZSBtYW5lcmEgcsOhcGlkYSB5IHNlZ3VyYSBoYXN0YSB1biBsdWdhciBkb25kZSBwdWVkYW4gcmVjaWJpciBhdGVuY2nDs24gbcOpZGljYS4KCiAgICAgICAgICAucm93LmFsaWduLWl0ZW1zLWNlbnRlci5wLTQucC1tZC01CiAgICAgICAgICAgIC5jb2wtbGctNQogICAgICAgICAgICAgIGZpZ3VyZQogICAgICAgICAgICAgICAgaW1nKHNyYz0iQC9hc3NldHMvY3Vyc28vdGVtYTQvc2xpZGVyLTUucG5nIikKICAgICAgICAgICAgLmNvbC1sZy03CiAgICAgICAgICAgICAgaDUgRXF1aXBvcyBkZSBjb211bmljYWNpw7NuCiAgICAgICAgICAgICAgcCBTb24gbGEgY29sdW1uYSB2ZXJ0ZWJyYWwgZGUgY3VhbHF1aWVyIG9wZXJhY2nDs24gZGUgcmVzY2F0ZS4gTGEgY2FwYWNpZGFkIGRlIG1hbnRlbmVyIHVuYSBjb211bmljYWNpw7NuIGNvbnN0YW50ZSB5IGNsYXJhIGVudHJlIGxvcyBtaWVtYnJvcyBkZSBsYSBicmlnYWRhIGVzIGVzZW5jaWFsIHBhcmEgY29vcmRpbmFyIGVzZnVlcnpvcyB5IGdhcmFudGl6YXIgbGEgc2VndXJpZGFkIGRlbCBlcXVpcG8uIExhIGltcGxlbWVudGFjacOzbiBkZSBzaXN0ZW1hcyBkZSBjb211bmljYWNpw7NuIHJlZHVuZGFudGVzLCBjb21vIHJhZGlvcyBkZSBkb3MgdsOtYXMsIHRlbMOpZm9ub3Mgc2F0ZWxpdGFsZXMgbyBhcGxpY2FjaW9uZXMgbcOzdmlsZXMsIHB1ZWRlIHNlciBjcnVjaWFsIGVuIMOhcmVhcyBkb25kZSBsYSBjb2JlcnR1cmEgZGUgcmVkIGVzIGxpbWl0YWRhIG8gaW5leGlzdGVudGUuCgogICAgI3RfNF80LnRpdHVsby1zZWd1bmRvKGRhdGEtYW9zPSJmbGlwLXVwIikKICAgICAgaDIgI1tzcGFuIDQuNF0gQm90aXF1w61uIGRlIHByaW1lcm9zIGF1eGlsaW9zCgogICAgcChkYXRhLWFvcz0iZmFkZS1sZWZ0IikubWItNCBFbCBib3RpcXXDrW4gZGUgcHJpbWVyb3MgYXV4aWxpb3MgZXMgdW5hIGhlcnJhbWllbnRhIGVzZW5jaWFsIHBhcmEgZ2FyYW50aXphciB1bmEgYXRlbmNpw7NuIG9wb3J0dW5hIGVuIHNpdHVhY2lvbmVzIGRlIGVtZXJnZW5jaWEsIHlhIHF1ZSBwZXJtaXRlIGJyaW5kYXIgYXNpc3RlbmNpYSBpbm1lZGlhdGEgYSBwZXJzb25hcyBsZXNpb25hZGFzIGhhc3RhIHF1ZSBsbGVndWVuIGxvcyBzZXJ2aWNpb3MgbcOpZGljb3MgZXNwZWNpYWxpemFkb3MuCiAgICAKICAgIC5iZy1mdWxsLXdpZHRoLmJnLWNvbG9yLTIubWItbGctNQogICAgICAucHgtNC5wLW1kLTUKICAgICAgICAucm93Lmp1c3RpZnktY29udGVudC1jZW50ZXIuYWxpZ24taXRlbXMtY2VudGVyCgogICAgICAgICAgLmNvbC1sZy00CiAgICAgICAgICAgIGZpZ3VyZShkYXRhLWFvcz0iem9vbS1pbiIpCiAgICAgICAgICAgICAgaW1nKHNyYz0nQC9hc3NldHMvY3Vyc28vdGVtYTQvNC5wbmcnLCBhbHQ9JycpCiAgICAgICAgICAuY29sLWxnLTgKICAgICAgICAgICAgaDIubWItNChkYXRhLWFvcz0iZmxpcC11cCIpIEJvdGlxdcOtbiBkZSBwcmltZXJvcyBhdXhpbGlvcwogICAgICAgICAgICBwLm1iLTQoZGF0YS1hb3M9ImZhZGUtcmlnaHQiKSBFbiBlbCBQREYgQm90aXF1w61uIGRlIHByaW1lcm9zIGF1eGlsaW9zLCBzZSBkZXRhbGxhbiBsb3MgdGlwb3MgZGUgYm90aXF1aW5lcyBxdWUgZGViZW4gZXN0YXIgZGlzcG9uaWJsZXMgc2Vnw7puIGxhcyBub3JtYXRpdmFzIHZpZ2VudGVzIGVuIENvbG9tYmlhLCBhc8OtIGNvbW8gbG9zIGVsZW1lbnRvcyBuZWNlc2FyaW9zIHBhcmEgYXRlbmRlciBpbmNpZGVudGVzIGRlIG1hbmVyYSBlZmVjdGl2YSBlbiBkaWZlcmVudGVzIHRpcG9zIGRlIGVzdGFibGVjaW1pZW50b3MgY29tZXJjaWFsZXMuCgogICAgICAgICAgICBhLmFuZXhvLm1iLTQuYmctd2hpdGUudy1maXQoOmhyZWY9Im9idGVuZXJMaW5rKCcvZG93bmxvYWRzL0FuZXhvXzEucGRmJykiIHRhcmdldD0iX2JsYW5rIikoZGF0YS1hb3M9ImZsaXAtdXAiKQogICAgICAgICAgICAgIC5hbmV4b19faWNvbm8oOnN0eWxlPSJ7J2JhY2tncm91bmQtY29sb3InOiAnI0ZDREZEQid9IikKICAgICAgICAgICAgICAgIGltZyhzcmM9IkAvYXNzZXRzL3RlbXBsYXRlL2ljb25vLXBkZi5zdmciKQogICAgICAgICAgICAgIC5hbmV4b19fdGV4dG8KICAgICAgICAgICAgICAgIHAgPHN0cm9uZz5BbmV4by4gPC9zdHJvbmc+IEJvdGlxdcOtbiBkZSBwcmltZXJvcyBhdXhpbGlvcwoKICAgICN0XzRfNS50aXR1bG8tc2VndW5kbyhkYXRhLWFvcz0iZmxpcC11cCIpCiAgICAgIGgyICNbc3BhbiA0LjVdIFBsYW5pZmljYWNpw7NuIHkgcHJvdG9jb2xvcyBkZSBlbWVyZ2VuY2lhCgogICAgcChkYXRhLWFvcz0iZmFkZS1sZWZ0IikubWItNCBMYSBwbGFuaWZpY2FjacOzbiB5IGxvcyBwcm90b2NvbG9zIGRlIGVtZXJnZW5jaWEsIHNvbiBwaWxhcmVzIGZ1bmRhbWVudGFsZXMgZW4gbGEgZ2VzdGnDs24gZGUgY3Jpc2lzIGRlbnRybyBkZSBjdWFscXVpZXIgb3JnYW5pemFjacOzbi4gTm8gc29sbyBzZSB0cmF0YSBkZSBjb250YXIgY29uIHJlY3Vyc29zIGbDrXNpY29zLCBzaW5vIGRlIGVzdGFibGVjZXIgdW4gbWFyY28gZGUgYWNjacOzbiBxdWUgcGVybWl0YSB1bmEgcmVzcHVlc3RhIGVmZWN0aXZhIGFudGUgc2l0dWFjaW9uZXMgYWR2ZXJzYXMuIFVuIHBsYW4gYmllbiBkZWZpbmlkbyBubyBzb2xvIGZhY2lsaXRhIGxhIGNvb3JkaW5hY2nDs24gZGUgbGEgYnJpZ2FkYSBkZSBlbWVyZ2VuY2lhLCBzaW5vIHF1ZSB0YW1iacOpbiBtaW5pbWl6YSBlbCByaWVzZ28gZGUgbGVzaW9uZXMgeSBkYcOxb3MgbWF0ZXJpYWxlcy4KCiAgICAucm93LmFsaWduLWl0ZW1zLXN0YXJ0Lm1iLTUKICAgICAgLmNvbC1sZy04CgoKICAgICAgICBBY29yZGlvbkEodGlwbz0iYiIpCiAgICAgICAgICAuZGl2KHRpdHVsbz0iUHJvdG9jb2xvcyBkZSBhY3R1YWNpw7NuIikKICAgICAgICAgICAgcCBFc3RvcyBzb24gcHJvY2VkaW1pZW50b3MgZXNwZWPDrWZpY29zIHF1ZSBkZWJlbiBzZXIgYWRvcHRhZG9zIGVuIGNhc28gZGUgZGlmZXJlbnRlcyB0aXBvcyBkZSBlbWVyZ2VuY2lhcywgY29tbyBpbmNlbmRpb3MsIHRlcnJlbW90b3MsIGludW5kYWNpb25lcyBvIHNpdHVhY2lvbmVzIGRlIHZpb2xlbmNpYS4gQ2FkYSBwcm90b2NvbG8gZGViZSBkZXRhbGxhciBsYXMgcmVzcG9uc2FiaWxpZGFkZXMgZGUgY2FkYSBtaWVtYnJvIGRlIGxhIGJyaWdhZGEsIHkgbGFzIGFjY2lvbmVzIGEgc2VndWlyIGVuIGNhZGEgZXNjZW5hcmlvLiBFcyBjcnVjaWFsIHF1ZSBlc3RvcyBwcm90b2NvbG9zIHNlYW4gcmV2aXNhZG9zIHkgYWN0dWFsaXphZG9zIHJlZ3VsYXJtZW50ZSwgcGFyYSB2ZXIgY2FtYmlvcyBlbiBlbCBlbnRvcm5vIG9wZXJhdGl2byBvIGVuIGxhIG5vcm1hdGl2YSBsZWdhbCB2aWdlbnRlLiBMYSBjbGFyaWRhZCB5IGxhIGFjY2VzaWJpbGlkYWQgZGUgZXN0b3MgcHJvdG9jb2xvcywgc29uIGVzZW5jaWFsZXMgcGFyYSBhc2VndXJhciBxdWUgY2FkYSBtaWVtYnJvIGRlbCBlcXVpcG8gc2VwYSBxdcOpIGhhY2VyIGVuIGVsIG1vbWVudG8gY3LDrXRpY28uCgogICAgICAgICAgLmRpdih0aXR1bG89Ik1hcGFzIGRlIHJpZXNnbyIpCiAgICAgICAgICAgIHAgTGEgaWRlbnRpZmljYWNpw7NuIGRlIMOhcmVhcyBkZSByaWVzZ28gZXMgZXNlbmNpYWwgcGFyYSB1bmEgcmVzcHVlc3RhIGVmaWNhei4gRXN0b3MgbWFwYXMgcGVybWl0ZW4gdmlzdWFsaXphciBsYXMgem9uYXMgbcOhcyB2dWxuZXJhYmxlcyB5IGxvcyBjYW1pbm9zIGRlIGV2YWN1YWNpw7NuIG3DoXMgc2VndXJvcy4gQWRlbcOhcywgZGViZW4gaW5jbHVpciBpbmZvcm1hY2nDs24gc29icmUgbG9zIHJlY3Vyc29zIGRpc3BvbmlibGVzLCBjb21vIGV4dGludG9yZXMsIHNhbGlkYXMgZGUgZW1lcmdlbmNpYSB5IHB1bnRvcyBkZSByZXVuacOzbi4gTGEgZWxhYm9yYWNpw7NuIGRlIGVzdG9zIG1hcGFzIGRlYmUgc2VyIHVuIHByb2Nlc28gcGFydGljaXBhdGl2bywgaW52b2x1Y3JhbmRvIGEgdG9kb3MgbG9zIG5pdmVsZXMgZGUgbGEgb3JnYW5pemFjacOzbiwgcGFyYSBhc2VndXJhciBjb25zaWRlcmFyIGRpZmVyZW50ZXMgcGVyc3BlY3RpdmFzIHkgY29ub2NpbWllbnRvcyBsb2NhbGVzLgoKICAgICAgICAgIC5kaXYodGl0dWxvPSJTaW11bGFjcm9zIHkgZW50cmVuYW1pZW50b3MgcmVndWxhcmVzIikKICAgICAgICAgICAgcCBMYSBwcmVwYXJhY2nDs24gZXMgY2xhdmUgZW4gbGEgZ2VzdGnDs24gZGUgZW1lcmdlbmNpYXMuIFJlYWxpemFyIHNpbXVsYWNyb3MgeSBlbnRyZW5hbWllbnRvcyBwZXJpw7NkaWNvcywgYXl1ZGEgYSBtYW50ZW5lciBhbCBwZXJzb25hbCBhbGVydGEgeSBmYW1pbGlhcml6YWRvIGNvbiBsb3MgcHJvY2VkaW1pZW50b3MgZXN0YWJsZWNpZG9zLiBFc3RvcyBlamVyY2ljaW9zIHByw6FjdGljb3Mgbm8gc29sbyByZWZ1ZXJ6YW4gbGEgY29uZmlhbnphIGRlbCBlcXVpcG8sIHNpbm8gcXVlIHRhbWJpw6luIHBlcm1pdGVuIGlkZW50aWZpY2FyIMOhcmVhcyBkZSBtZWpvcmEgZW4gbG9zIHByb3RvY29sb3MgZXhpc3RlbnRlcy4gRHVyYW50ZSBsb3Mgc2ltdWxhY3JvcywgZXMgaW1wb3J0YW50ZSBldmFsdWFyIGVsIHRpZW1wbyBkZSByZXNwdWVzdGEsIGxhIGVmZWN0aXZpZGFkIGRlIGxhIGNvbXVuaWNhY2nDs24geSBsYSBjb29yZGluYWNpw7NuIGVudHJlIGxvcyBtaWVtYnJvcyBkZWwgZXF1aXBvLiBBZGVtw6FzLCBzZSBkZWJlbiBkb2N1bWVudGFyIGxvcyByZXN1bHRhZG9zIGRlIGNhZGEgZWplcmNpY2lvIHBhcmEgcmVhbGl6YXIgYWp1c3RlcyBuZWNlc2FyaW9zIHkgYXPDrSBvcHRpbWl6YXIgbGEgcGxhbmlmaWNhY2nDs24uCgogICAgICAuY29sLWxnLTQKICAgICAgICBmaWd1cmUKICAgICAgICAgIGltZyhzcmM9IkAvYXNzZXRzL2N1cnNvL3RlbWE0LzUucG5nIiwgYWx0PSIiKS5tYi00Lm1iLWxnLTAKCgoKICAgIC5iZy1mdWxsLXdpZHRoLmJnLWNvbG9yLTIubWItNQogICAgICAucHgtNC5weC1tZC01LnB5LTQKICAgICAgICAucm93LmFsaWduLWl0ZW1zLWNlbnRlcgogICAgICAgICAgLmNvbC1sZy1hdXRvCiAgICAgICAgICAgIGltZyhzcmM9IkAvYXNzZXRzL2N1cnNvL3RlbWE0LzYuc3ZnIiwgc3R5bGU9Im1heC13aWR0aDogOTBweCIpLm14LWF1dG8KICAgICAgICAgIC5jb2wtbGcKICAgICAgICAgICAgcC5tYi0wIExhIGltcGxlbWVudGFjacOzbiBkZSB1bmEgcGxhbmlmaWNhY2nDs24gcmlndXJvc2EgeSBwcm90b2NvbG9zIGRlIGVtZXJnZW5jaWEsIG5vIHNvbG8gcHJvdGVnZSBhIGxhcyBwZXJzb25hcyB5IGxvcyBiaWVuZXMgbWF0ZXJpYWxlcywgc2lubyBxdWUgdGFtYmnDqW4gY29udHJpYnV5ZSBhIGNyZWFyIHVuYSBjdWx0dXJhIG9yZ2FuaXphY2lvbmFsIGRlIHByZXZlbmNpw7NuIHkgc2VndXJpZGFkLiAKCgoKICAgIC5yb3cubWItNQogICAgICAuY29sLWxnLTQKICAgICAgICBmaWd1cmUKICAgICAgICAgIGltZyhzcmM9IkAvYXNzZXRzL2N1cnNvL3RlbWE0LzcucG5nIiwgZGF0YS1hb3M9Inpvb20taW4iKS5tdC00Lm10LWxnLTAKCiAgICAgIC5jb2wtbGctOAogICAgICAgIHAoZGF0YS1hb3M9ImZhZGUtbGVmdCIpLm1iLTQgQWwgZm9tZW50YXIgbGEgY29uY2llbmNpYSBzb2JyZSBsYSBpbXBvcnRhbmNpYSBkZSBsYSBwcmVwYXJhY2nDs24gYW50ZSBlbWVyZ2VuY2lhcywgc2UgZXN0YWJsZWNlIHVuIGVudG9ybm8gZW4gZWwgcXVlIHRvZG9zIGxvcyBtaWVtYnJvcyBkZSBsYSBvcmdhbml6YWNpw7NuIHNlIHNpZW50ZW4gZW1wb2RlcmFkb3MgeSByZXNwb25zYWJsZXMgZGUgc3UgcHJvcGlhIHNlZ3VyaWRhZCB5IGxhIGRlIHN1cyBjb21wYcOxZXJvcy4gRW4gZXN0ZSBzZW50aWRvLCBsYSBlZHVjYWNpw7NuIHkgbGEgZm9ybWFjacOzbiBjb250aW51YSBzb24gaGVycmFtaWVudGFzIGNsYXZlcyBxdWUgZGViZW4gc2VyIGludGVncmFkYXMgZW4gbGEgcnV0aW5hIGRlbCBwZXJzb25hbCwgYXNlZ3VyYW5kbyBxdWUgbGEgYnJpZ2FkYSBlc3TDqSBzaWVtcHJlIGxpc3RhIHBhcmEgYWN0dWFyIGRlIG1hbmVyYSBlZmVjdGl2YSBjdWFuZG8gc2VhIG5lY2VzYXJpby4KCiAgICAgICAgLmJnLWNvbG9yLTEucC00KGRhdGEtYW9zPSJmYWRlLWxlZnQiKQogICAgICAgICAgcC5tYi0wIENvbnRhciBjb24gbG9zIHJlY3Vyc29zIGLDoXNpY29zIGFkZWN1YWRvcywgZXMgZnVuZGFtZW50YWwgcGFyYSBlbCDDqXhpdG8gZGUgdW5hIGJyaWdhZGEgZGUgZW1lcmdlbmNpYXMuIExhIGNvbWJpbmFjacOzbiBkZSBwZXJzb25hbCBjYXBhY2l0YWRvLCBlcXVpcGFtaWVudG8gZGUgcHJvdGVjY2nDs24gcGVyc29uYWwsIGhlcnJhbWllbnRhcyBkZSByZXNjYXRlLCBtYXRlcmlhbGVzIGRlIHByaW1lcm9zIGF1eGlsaW9zLCBwbGFuaWZpY2FjacOzbiBhZGVjdWFkYSB5IGFwb3lvIGxvZ8Otc3RpY28gcGVybWl0ZSBxdWUgdW5hIGJyaWdhZGEgcmVzcG9uZGEgZGUgbWFuZXJhIGVmZWN0aXZhIGFudGUgc2l0dWFjaW9uZXMgY3LDrXRpY2FzLCBtaW5pbWl6YW5kbyByaWVzZ29zIHkgc2FsdmFuZG8gdmlkYXMuIExhIHByZXBhcmFjacOzbiB5IGxhIGNhcGFjaXRhY2nDs24gY29udGludWEgc29uIGVsZW1lbnRvcyBjbGF2ZXMgcXVlIGRlYmVuIHNlciBmb21lbnRhZG9zIHBhcmEgZ2FyYW50aXphciBxdWUgZXN0YXMgYnJpZ2FkYXMgZXN0w6luIHNpZW1wcmUgbGlzdGFzIHBhcmEgZW5mcmVudGFyIGN1YWxxdWllciBkZXNhZsOtbyBxdWUgc2UgbGVzIHByZXNlbnRlLiAKCiAgICAuYmctZnVsbC13aWR0aC5ib3JkZXItdG9wLmFjdGl2aWRhZC5iZy1jb2xvci1hY3RpdmlkYWQKICAgICAgLnAtNC5wLW1kLTUKICAgICAgICAjQWN0aXZpZGFkICAgICAgICAgICAgICAgIAogICAgICAgICAgPEFjdGl2aWRhZCA6Y3Vlc3Rpb25hcmlvPSJjdWVzdGlvbmFyaW8iLz4K"},null]}